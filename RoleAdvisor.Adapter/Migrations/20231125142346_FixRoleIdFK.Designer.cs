// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoleAdvisor.Adapter;

#nullable disable

namespace RoleAdvisor.Adapter.Migrations
{
    [DbContext(typeof(RoleAdvisorContext))]
    [Migration("20231125142346_FixRoleIdFK")]
    partial class FixRoleIdFK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeePosition", b =>
                {
                    b.Property<int>("AdvisedEmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("PositionProjectId")
                        .HasColumnType("int");

                    b.Property<int>("PositionRoleId")
                        .HasColumnType("int");

                    b.HasKey("AdvisedEmployeesId", "PositionProjectId", "PositionRoleId");

                    b.HasIndex("PositionProjectId", "PositionRoleId");

                    b.ToTable("EmployeePosition");
                });

            modelBuilder.Entity("EmployeeRole", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RolesPreferredId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "RolesPreferredId");

                    b.HasIndex("RolesPreferredId");

                    b.ToTable("EmployeeRole");
                });

            modelBuilder.Entity("RoleAdvisor.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("RoleAdvisor.Domain.Entities.Position", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PickedEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "RoleId");

                    b.HasIndex("PickedEmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("RoleAdvisor.Domain.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("RoleAdvisor.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RoleAdvisor.Domain.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("EmployeePosition", b =>
                {
                    b.HasOne("RoleAdvisor.Domain.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("AdvisedEmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoleAdvisor.Domain.Entities.Position", null)
                        .WithMany()
                        .HasForeignKey("PositionProjectId", "PositionRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeRole", b =>
                {
                    b.HasOne("RoleAdvisor.Domain.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoleAdvisor.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesPreferredId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleAdvisor.Domain.Entities.Position", b =>
                {
                    b.HasOne("RoleAdvisor.Domain.Entities.Employee", null)
                        .WithMany("PositionsPickedFor")
                        .HasForeignKey("PickedEmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoleAdvisor.Domain.Entities.Project", null)
                        .WithMany("Positions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoleAdvisor.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleAdvisor.Domain.Entities.Project", b =>
                {
                    b.HasOne("RoleAdvisor.Domain.Entities.Employee", null)
                        .WithMany("ProjectsCreated")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleAdvisor.Domain.Entities.Skill", b =>
                {
                    b.HasOne("RoleAdvisor.Domain.Entities.Employee", null)
                        .WithMany("Skills")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("RoleAdvisor.Domain.Entities.Employee", b =>
                {
                    b.Navigation("PositionsPickedFor");

                    b.Navigation("ProjectsCreated");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("RoleAdvisor.Domain.Entities.Project", b =>
                {
                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
